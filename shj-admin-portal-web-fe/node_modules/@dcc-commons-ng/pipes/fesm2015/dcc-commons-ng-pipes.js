import { Pipe, NgModule } from '@angular/core';
import { DatePipe } from '@angular/common';

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class HijriFormatPipe {
    /**
     * Formats the value (numeric like 14401015) to a date format (1440/10/15)
     *
     * @param {?} value the field value
     * @param {?=} args the field arguments
     * @return {?} the formatted value
     */
    transform(value, args) {
        /** @type {?} */
        let result = value + '' || '';
        if (isNaN(value) || result.length != 8) {
            return '';
        }
        return result.substring(0, 4) + '/' + result.substring(4, 6) + '/' + result.substring(6, 8);
    }
}
HijriFormatPipe.decorators = [
    { type: Pipe, args: [{
                name: 'hijriFormat'
            },] }
];

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class DateFormatPipe extends DatePipe {
    /**
     * @param {?} value
     * @param {?=} args
     * @return {?}
     */
    transform(value, args) {
        return super.transform(value, DateFormatPipe.DATE_FMT);
    }
}
DateFormatPipe.DATE_FMT = 'dd/MM/yyyy';
DateFormatPipe.decorators = [
    { type: Pipe, args: [{
                name: 'dateFormat'
            },] }
];

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class DateTimeFormatPipe extends DatePipe {
    /**
     * @param {?} value
     * @param {?=} args
     * @return {?}
     */
    transform(value, args) {
        return super.transform(value, DateTimeFormatPipe.DATE_TIME_FMT);
    }
}
DateTimeFormatPipe.DATE_TIME_FMT = `${DateFormatPipe.DATE_FMT} hh:mm`;
DateTimeFormatPipe.decorators = [
    { type: Pipe, args: [{
                name: 'dateTimeFormat'
            },] }
];

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class MobileNumberFormatPipe {
    /**
     * Formats the value (numeric like 5123456789) to a mobile format (+966 5123456789)
     *
     * @param {?} value the field value
     * @param {?=} args the field arguments
     * @return {?} the formatted value
     */
    transform(value, args) {
        /** @type {?} */
        let result = value + '' || '';
        if (isNaN(value) || result.length != 9) {
            return '';
        }
        return '+966 ' + result;
    }
}
MobileNumberFormatPipe.decorators = [
    { type: Pipe, args: [{
                name: 'mobileFormat'
            },] }
];

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class DccCommonsNgPipesModule {
}
DccCommonsNgPipesModule.decorators = [
    { type: NgModule, args: [{
                imports: [],
                declarations: [
                    HijriFormatPipe,
                    DateFormatPipe,
                    DateTimeFormatPipe,
                    MobileNumberFormatPipe
                ],
                exports: [
                    HijriFormatPipe,
                    DateFormatPipe,
                    DateTimeFormatPipe,
                    MobileNumberFormatPipe
                ],
                providers: []
            },] }
];

export { DccCommonsNgPipesModule, HijriFormatPipe as ɵa, DateFormatPipe as ɵb, DateTimeFormatPipe as ɵc, MobileNumberFormatPipe as ɵd };
//# sourceMappingURL=dcc-commons-ng-pipes.js.map
