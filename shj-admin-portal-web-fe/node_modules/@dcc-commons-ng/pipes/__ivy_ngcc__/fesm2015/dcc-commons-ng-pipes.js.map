{"version":3,"file":"dcc-commons-ng-pipes.js","sources":["ng:/@dcc-commons-ng/pipes/lib/date/hijri-format.pipe.ts","ng:/@dcc-commons-ng/pipes/lib/date/date-format.pipe.ts","ng:/@dcc-commons-ng/pipes/lib/date/date-time-format.pipe.ts","ng:/@dcc-commons-ng/pipes/lib/numeric/mobile-number-format.pipe.ts","ng:/@dcc-commons-ng/pipes/lib/pipes.module.ts"],"names":[],"mappings":";;;;;;;;AAAA,MAKa,eAAe;AAAG;AAAQ;AAIe;AAAO;AAE1C;AACU;AACE;AAC1B,IACH,SAAS,CAAC,KAAU,EAAE,IAAU;AAAI;AAClB,YAAZ,MAAM,GAAG,KAAK,GAAC,EAAE,IAAI,EAAE;AAC/B,QACI,IAAI,KAAK,CAAC,KAAK,CAAC,IAAI,MAAM,CAAC,MAAM,IAAI,CAAC,EAAC;AAC3C,YAAM,OAAO,EAAE,CAAC;AAChB,SAAK;AACL,QACI,OAAO,MAAM,CAAC,SAAS,CAAC,CAAC,EAAC,CAAC,CAAC,GAAG,GAAG,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC,EAAC,CAAC,CAAC,GAAG,GAAG,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC;AAC7F,KAAG;AACH;2CAtBC,IAAI,SAAC,kBACJ,IAAI,EAAE,aAAa;MACpB;;;;;;0BACI;AAAC;AAAC;AAAI;AAAkC;AAM7B;ACXhB,MAMa,cAAe,SAAQ,QAAQ;AAAG;AAAQ;AAEjD;AAAwB;AAEzB;AAAQ,IAAX,SAAS,CAAC,KAAU,EAAE,IAAU;AAAI,QAClC,OAAO,KAAK,CAAC,SAAS,CAAC,KAAK,EAAE,cAAc,CAAC,QAAQ,CAAC,CAAC;AAC3D,KAAG;AACH;;qGAAC;AALiB,uBAAQ,GAAG,YAAY,CAAC;0CALzC,IAAI,SAAC,kBACJ,IAAI,EAAE;SAAY,cACnB;;;;;0BACI;AAAC;AAAC;AAAI;AAAkC;AAK3C;AAAI,MCAO,kBAAmB,SAAQ,QAAQ;AAAG;AAAQ;AAErD;AAAwB;AAAmB;AAAQ,IAEvD,SAAS,CAAC,KAAU,EAAE,IAAU;AAAI,QAClC,OAAO,KAAK,CAAC,SAAS,CAAC,KAAK,EAAE,kBAAkB,CAAC,aAAa,CAAC,CAAC;AACpE,KAAG;AACH;;iHAAC;AALiB,gCAAa,GAAG,GAAG,cAAc,CAAC,QAAQ,QAAQ,CAAC;8CALpE,IAAI,SAAC,kBACJ,IAAI,EAAE;SAAgB,cACvB;;;;;0BACI;AAAC;AAAC;AAAI;AAAkC;AAI/B;ACfd,MAKa,sBAAsB;AAAG;AAAQ;AAIiB;AAAO;AAEnD;AACU;AACE;AAC1B,IACH,SAAS,CAAC,KAAU,EAAE,IAAU;AAAI;AAClB,YAAZ,MAAM,GAAG,KAAK,GAAC,EAAE,IAAI,EAAE;AAC/B,QACI,IAAI,KAAK,CAAC,KAAK,CAAC,IAAI,MAAM,CAAC,MAAM,IAAI,CAAC,EAAC;AAC3C,YAAM,OAAO,EAAE,CAAC;AAChB,SAAK;AACL,QACI,OAAO,OAAO,GAAG,MAAM,CAAC;AAC5B,KAAG;AACH;kDAtBC,IAAI,SAAC,kBACJ,IAAI,EAAE,cAAc,cACrB;;;;;;;0BACI;AAAC;AAAC;AAAI;AAAkC;AAM7C;ACXA,MAwBa,uBAAuB;AAAG;mDAlBtC,QAAQ,SAAC,kBACR;EAAO,EAAE,EAAE,kBACX,YAAY,EAAE,sBACZ,eAAe,sBACf,cAAc,sBACd,kBAAkB,sBAElB;EAAsB,kBACvB,kBACD,OAAO,EAAE,sBACP,eAAe,sBACf,cAAc,sBACd;SAAkB;OAElB;CAAsB,kBACvB,kBACD,SAAS,EAAE,EAAE;IACd;;;;;;;;;;;;;;;;;;;;;0BACI;AAAC;AAAC;AACgG","sourcesContent":["import {Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({\n  name: 'hijriFormat'\n})\nexport class HijriFormatPipe implements PipeTransform {\n\n\n  /**\n   * Formats the value (numeric like 14401015) to a date format (1440/10/15)\n   *\n   * @param value the field value\n   * @param args the field arguments\n   * @returns the formatted value\n   */\n  transform(value: any, args?: any): any {\n    let result = value+'' || '';\n\n    if (isNaN(value) || result.length != 8){\n      return '';\n    }\n\n    return result.substring(0,4) + '/' + result.substring(4,6) + '/' + result.substring(6,8);\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { DatePipe } from '@angular/common';\n\n@Pipe({\n  name: 'dateFormat'\n})\nexport class DateFormatPipe extends DatePipe implements PipeTransform {\n\n  static readonly DATE_FMT = 'dd/MM/yyyy';\n\n  transform(value: any, args?: any): any {\n    return super.transform(value, DateFormatPipe.DATE_FMT);\n  }\n}\n","/*\n * Copyright (c) 2019 ELM. All rights reserved.\n */\n\nimport { DatePipe } from '@angular/common';\nimport { Pipe, PipeTransform } from '@angular/core';\nimport {DateFormatPipe} from \"./date-format.pipe\";\n\n@Pipe({\n  name: 'dateTimeFormat'\n})\nexport class DateTimeFormatPipe extends DatePipe implements PipeTransform {\n\n  static readonly DATE_TIME_FMT = `${DateFormatPipe.DATE_FMT} hh:mm`;\n\n  transform(value: any, args?: any): any {\n    return super.transform(value, DateTimeFormatPipe.DATE_TIME_FMT);\n  }\n}\n","import {Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({\n  name: 'mobileFormat'\n})\nexport class MobileNumberFormatPipe implements PipeTransform {\n\n\n  /**\n   * Formats the value (numeric like 5123456789) to a mobile format (+966 5123456789)\n   *\n   * @param value the field value\n   * @param args the field arguments\n   * @returns the formatted value\n   */\n  transform(value: any, args?: any): any {\n    let result = value+'' || '';\n\n    if (isNaN(value) || result.length != 9){\n      return '';\n    }\n\n    return '+966 ' + result;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport {HijriFormatPipe} from \"./date/hijri-format.pipe\";\nimport {DateFormatPipe} from \"./date/date-format.pipe\";\nimport {DateTimeFormatPipe} from \"./date/date-time-format.pipe\";\nimport {MobileNumberFormatPipe} from \"./numeric/mobile-number-format.pipe\";\n\n@NgModule({\n  imports: [],\n  declarations: [\n    HijriFormatPipe,\n    DateFormatPipe,\n    DateTimeFormatPipe,\n\n    MobileNumberFormatPipe\n  ],\n  exports: [\n    HijriFormatPipe,\n    DateFormatPipe,\n    DateTimeFormatPipe,\n\n    MobileNumberFormatPipe\n  ],\n  providers: []\n})\nexport class DccCommonsNgPipesModule { }\n"]}