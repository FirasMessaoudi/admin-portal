{"version":3,"file":"dcc-commons-ng-services.js","sources":["ng:/@dcc-commons-ng/services/lib/route/route-reusable-strategy.ts","ng:/@dcc-commons-ng/services/lib/logging/logging.service.ts","ng:/@dcc-commons-ng/services/lib/i18n/i18n.service.ts","ng:/@dcc-commons-ng/services/lib/http/error-handler.interceptor.ts","ng:/@dcc-commons-ng/services/lib/http/http-cache.service.ts","ng:/@dcc-commons-ng/services/lib/http/cache.interceptor.ts","ng:/@dcc-commons-ng/services/lib/http/api-prefix.interceptor.ts","ng:/@dcc-commons-ng/services/lib/logging/index.ts","ng:/@dcc-commons-ng/services/lib/http/jwt.interceptor.ts","ng:/@dcc-commons-ng/services/lib/http/csrf.interceptor.ts","ng:/@dcc-commons-ng/services/lib/http/mock.interceptor.ts","ng:/@dcc-commons-ng/services/lib/http/http.service.ts","ng:/@dcc-commons-ng/services/lib/services.module.ts","ng:/@dcc-commons-ng/services/lib/http/index.ts","ng:/@dcc-commons-ng/services/lib/i18n/index.ts","ng:/@dcc-commons-ng/services/lib/route/route.service.ts","ng:/@dcc-commons-ng/services/lib/route/index.ts","ng:/@dcc-commons-ng/services/lib/index.ts","ng:/@dcc-commons-ng/services/public_api.ts","ng:/@dcc-commons-ng/services/dcc-commons-ng-services.ts"],"names":["log"],"mappings":"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","sourcesContent":["import {ActivatedRouteSnapshot, DetachedRouteHandle, RouteReuseStrategy} from '@angular/router';\n\n/**\n * A route strategy allowing for explicit route reuse.\n * Used as a workaround for https://github.com/angular/angular/issues/18374\n * To reuse a given route, add `data: { reuse: true }` to the route definition.\n */\nexport class RouteReusableStrategy extends RouteReuseStrategy {\n\n  public shouldDetach(route: ActivatedRouteSnapshot): boolean {\n    return false;\n  }\n\n  public store(route: ActivatedRouteSnapshot, detachedTree: DetachedRouteHandle | null): void {\n  }\n\n  public shouldAttach(route: ActivatedRouteSnapshot): boolean {\n    return false;\n  }\n\n  public retrieve(route: ActivatedRouteSnapshot): DetachedRouteHandle | null {\n    return null;\n  }\n\n  public shouldReuseRoute(future: ActivatedRouteSnapshot, curr: ActivatedRouteSnapshot): boolean {\n    return (future.routeConfig === curr.routeConfig) || future.data.reuse;\n  }\n\n}\n","/**\n * Simple logger system with the possibility of registering custom outputs.\n *\n * 4 different log levels are provided, with corresponding methods:\n * - debug   : for debug information\n * - info    : for informative status of the application (success, ...)\n * - warning : for non-critical errors that do not prevent normal application behavior\n * - error   : for critical errors that prevent normal application behavior\n *\n * Example usage:\n * ```\n * import { Logger } from 'app/core/logger.service';\n *\n * const log = new Logger('myFile');\n * ...\n * log.debug('something happened');\n * ```\n *\n * To disable debug and info logs in production, add this snippet to your root component:\n * ```\n * export class AppComponent implements OnInit {\n *   ngOnInit() {\n *     if (environment.production) {\n *       Logger.enableProductionMode();\n *     }\n *     ...\n *   }\n * }\n *\n * If you want to process logs through other outputs than console, you can add LogOutput functions to Logger.outputs.\n */\n\n/**\n * The possible log levels.\n * LogLevel.Off is never emitted and only used with Logger.level property to disable logs.\n */\nexport enum LogLevel {\n  Off = 0,\n  Error,\n  Warning,\n  Info,\n  Debug\n}\n\n/**\n * Log output handler function.\n */\nexport type LogOutput = (source: string, level: LogLevel, ...objects: any[]) => void;\n\nexport class Logger {\n\n  /**\n   * Current logging level.\n   * Set it to LogLevel.Off to disable logs completely.\n   */\n  static level = LogLevel.Debug;\n\n  /**\n   * Additional log outputs.\n   */\n  static outputs: LogOutput[] = [];\n\n  constructor(private source?: string) {\n  }\n\n  /**\n   * Enables production mode.\n   * Sets logging level to LogLevel.Warning.\n   */\n  static enableProductionMode() {\n    Logger.level = LogLevel.Warning;\n  }\n\n  /**\n   * Logs messages or objects  with the debug level.\n   * Works the same as console.log().\n   */\n  debug(...objects: any[]) {\n    this.log(console.log, LogLevel.Debug, objects);\n  }\n\n  /**\n   * Logs messages or objects  with the info level.\n   * Works the same as console.log().\n   */\n  info(...objects: any[]) {\n    this.log(console.info, LogLevel.Info, objects);\n  }\n\n  /**\n   * Logs messages or objects  with the warning level.\n   * Works the same as console.log().\n   */\n  warn(...objects: any[]) {\n    this.log(console.warn, LogLevel.Warning, objects);\n  }\n\n  /**\n   * Logs messages or objects  with the error level.\n   * Works the same as console.log().\n   */\n  error(...objects: any[]) {\n    this.log(console.error, LogLevel.Error, objects);\n  }\n\n  private log(func: Function, level: LogLevel, objects: any[]) {\n    if (level <= Logger.level) {\n      const log = this.source ? ['[' + this.source + ']'].concat(objects) : objects;\n      func.apply(console, log);\n      Logger.outputs.forEach((output) => output.apply(output, [this.source, level].concat(objects)));\n    }\n  }\n\n}\n","import {Injectable} from '@angular/core';\nimport {LangChangeEvent, TranslateService} from '@ngx-translate/core';\nimport {includes} from 'lodash';\n\nimport {Logger} from '../logging/logging.service';\n\nconst log = new Logger('I18nService');\nconst languageKey = 'language';\n\n/**\n * Pass-through function to mark a string for translation extraction.\n * Running `npm translations:extract` will include the given string by using this.\n * @param {string} s The string to extract for translation.\n * @return {string} The same string.\n */\nexport function extract(s: string) {\n  return s;\n}\n\n@Injectable()\nexport class I18nService {\n\n  defaultLanguage: string = \"en-US\";\n  supportedLanguages: string[];\n\n  constructor(private translateService: TranslateService) {\n  }\n\n  /**\n   * Gets the current language.\n   * @return {string} The current language code.\n   */\n  get language(): string {\n    return this.translateService.currentLang;\n  }\n\n  /**\n   * Sets the current language.\n   * Note: The current language is saved to the local storage.\n   * If no parameter is specified, the language is loaded from local storage (if present).\n   * @param {string} language The IETF language code to set.\n   */\n  set language(language: string) {\n    language = language || localStorage.getItem(languageKey) || this.translateService.getBrowserCultureLang();\n    let isSupportedLanguage = includes(this.supportedLanguages, language);\n\n    // If no exact match is found, search without the region\n    if (language && !isSupportedLanguage) {\n      language = language.split('-')[0];\n      language = this.supportedLanguages.find(supportedLanguage => supportedLanguage.startsWith(language)) || '';\n      isSupportedLanguage = Boolean(language);\n    }\n\n    // Fallback if language is not supported\n    if (!isSupportedLanguage) {\n      if (this.translateService.getBrowserLang() !== undefined) {\n        language = this.translateService.getBrowserLang();\n      } else {\n        language = this.defaultLanguage;\n      }\n    }\n\n    log.debug(`Language set to ${language}`);\n    this.translateService.use(language);\n\n    if (language && language.startsWith('ar')) {\n      document.querySelector(\"html\").setAttribute('dir', 'rtl');\n      document.querySelector(\"html\").setAttribute('lang', language);\n    } else {\n      document.querySelector(\"html\").setAttribute('dir', 'ltr');\n      document.querySelector(\"html\").setAttribute('lang', language);\n    }\n  }\n\n  /**\n   * Initializes i18n for the application.\n   * Loads language from local storage if present, or sets default language.\n   * @param {!string} defaultLanguage The default language to use.\n   * @param {Array.<String>} supportedLanguages The list of supported languages.\n   */\n  init(defaultLanguage: string, supportedLanguages: string[]) {\n    this.defaultLanguage = defaultLanguage;\n    this.supportedLanguages = supportedLanguages;\n    this.language = '';\n\n    this.translateService.onLangChange\n      .subscribe((event: LangChangeEvent) => {\n        localStorage.setItem(languageKey, event.lang);\n      });\n  }\n\n}\n","import {Inject, Injectable} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {HttpErrorResponse, HttpEvent, HttpHandler, HttpInterceptor, HttpRequest} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {catchError} from 'rxjs/operators';\n\nimport {Logger} from '../logging/logging.service';\n\nconst log = new Logger('ErrorHandlerInterceptor');\n\n/**\n * Adds a default error handler to all requests.\n */\n@Injectable()\nexport class ErrorHandlerInterceptor implements HttpInterceptor {\n\n  private environment: any;\n\n  constructor(private router: Router, @Inject('environment') environment: any) {\n    this.environment = environment\n  }\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    return next.handle(request).pipe(catchError(error => this.errorHandler(error)));\n  }\n\n  // Customize the default error handler here if needed\n  private errorHandler(response: HttpEvent<any>): Observable<HttpEvent<any>> {\n    if (!this.environment.production) {\n      // Do something with the error\n      log.error('Request error', JSON.stringify(response));\n    }\n    if (response instanceof HttpErrorResponse) {\n      if (response.status === 401) {\n        this.router.navigate(['login.html']);\n      }\n    }\n\n    throw response;\n  }\n\n}\n","/*\n * Copyright (c) 2019 ELM. All rights reserved.\n */\n\nimport {Injectable} from '@angular/core';\nimport {HttpResponse} from '@angular/common/http';\nimport {each} from 'lodash';\n\nimport {Logger} from '../logging/logging.service';\n\nconst log = new Logger('HttpCacheService');\nconst cachePersistenceKey = 'httpCache';\n\nexport interface HttpCacheEntry {\n  lastUpdated: Date;\n  data: HttpResponse<any>;\n}\n\n/**\n * Provides a cache facility for HTTP requests with configurable persistence policy.\n */\n@Injectable()\nexport class HttpCacheService {\n\n  private cachedData: { [key: string]: HttpCacheEntry; } = {};\n  private storage: Storage | null = null;\n\n  constructor() {\n    this.loadCacheData();\n  }\n\n  /**\n   * Sets the cache data for the specified request.\n   * @param {!string} url The request URL.\n   * @param {ResponseOptions} data The received data.\n   * @param {Date=} lastUpdated The cache last update, current date is used if not specified.\n   */\n  setCacheData(url: string, data: HttpResponse<any>, lastUpdated?: Date) {\n    this.cachedData[url] = {\n      lastUpdated: lastUpdated || new Date(),\n      data: data\n    };\n    log.debug(`Cache set for key: \"${url}\"`);\n    this.saveCacheData();\n  }\n\n  /**\n   * Gets the cached data for the specified request.\n   * @param {!string} url The request URL.\n   * @return {?ResponseOptions} The cached data or null if no cached data exists for this request.\n   */\n  getCacheData(url: string): HttpResponse<any> | null {\n    const cacheEntry = this.cachedData[url];\n\n    if (cacheEntry) {\n      log.debug(`Cache hit for key: \"${url}\"`);\n      return cacheEntry.data;\n    }\n\n    return null;\n  }\n\n  /**\n   * Gets the cached entry for the specified request.\n   * @param {!string} url The request URL.\n   * @return {?HttpCacheEntry} The cache entry or null if no cache entry exists for this request.\n   */\n  getHttpCacheEntry(url: string): HttpCacheEntry | null {\n    return this.cachedData[url] || null;\n  }\n\n  /**\n   * Clears the cached entry (if exists) for the specified request.\n   * @param {!string} url The request URL.\n   */\n  clearCache(url: string): void {\n    delete this.cachedData[url];\n    log.debug(`Cache cleared for key: \"${url}\"`);\n    this.saveCacheData();\n  }\n\n  /**\n   * Cleans cache entries older than the specified date.\n   * @param {date=} expirationDate The cache expiration date. If no date is specified, all cache is cleared.\n   */\n  cleanCache(expirationDate?: Date) {\n    if (expirationDate) {\n      each(this.cachedData, (value: HttpCacheEntry, key: string) => {\n        if (expirationDate >= value.lastUpdated) {\n          delete this.cachedData[key];\n        }\n      });\n    } else {\n      this.cachedData = {};\n    }\n    this.saveCacheData();\n  }\n\n  /**\n   * Sets the cache persistence policy.\n   * Note that changing the cache persistence will also clear the cache from its previous storage.\n   * @param {'local'|'session'=} persistence How the cache should be persisted, it can be either local or session\n   *   storage, or if no value is provided it will be only in-memory (default).\n   */\n  setPersistence(persistence?: 'local' | 'session') {\n    this.cleanCache();\n    this.storage = persistence === 'local' || persistence === 'session' ? window[persistence + 'Storage'] : null;\n    this.loadCacheData();\n  }\n\n  private saveCacheData() {\n    if (this.storage) {\n      this.storage[cachePersistenceKey] = JSON.stringify(this.cachedData);\n    }\n  }\n\n  private loadCacheData() {\n    const data = this.storage ? this.storage[cachePersistenceKey] : null;\n    this.cachedData = data ? JSON.parse(data) : {};\n  }\n\n}\n","import {Injectable} from '@angular/core';\nimport {HttpEvent, HttpHandler, HttpInterceptor, HttpRequest, HttpResponse} from '@angular/common/http';\nimport {Observable, Subscriber} from 'rxjs';\n\nimport {HttpCacheService} from './http-cache.service';\n\n/**\n * Caches HTTP requests.\n * Use ExtendedHttpClient fluent API to configure caching for each request.\n */\n@Injectable()\nexport class CacheInterceptor implements HttpInterceptor {\n\n  private forceUpdate = false;\n\n  constructor(private httpCacheService: HttpCacheService) {\n  }\n\n  /**\n   * Configures interceptor options\n   * @param {{update: boolean}} options If update option is enabled, forces request to be made and updates cache entry.\n   * @return {CacheInterceptor} The configured instance.\n   */\n  configure(options?: { update?: boolean } | null): CacheInterceptor {\n    const instance = new CacheInterceptor(this.httpCacheService);\n    if (options && options.update) {\n      instance.forceUpdate = true;\n    }\n    return instance;\n  }\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    if (request.method !== 'GET') {\n      return next.handle(request);\n    }\n\n    return new Observable((subscriber: Subscriber<HttpEvent<any>>) => {\n      const cachedData = this.forceUpdate ? null : this.httpCacheService.getCacheData(request.urlWithParams);\n      if (cachedData !== null) {\n        // Create new response to avoid side-effects\n        subscriber.next(new HttpResponse(cachedData as Object));\n        subscriber.complete();\n      } else {\n        next.handle(request)\n          .subscribe(\n            event => {\n              if (event instanceof HttpResponse) {\n                this.httpCacheService.setCacheData(request.urlWithParams, event);\n              }\n              subscriber.next(event);\n            },\n            error => subscriber.error(error),\n            () => subscriber.complete()\n          );\n      }\n    });\n  }\n\n}\n","import {Inject, Injectable} from '@angular/core';\nimport {HttpEvent, HttpHandler, HttpInterceptor, HttpRequest} from '@angular/common/http';\nimport {Observable} from 'rxjs';\n\n/**\n * Prefixes all requests with `environment.backendMappings`.\n */\n@Injectable()\nexport class ApiPrefixInterceptor implements HttpInterceptor {\n\n  private environment: any;\n\n  constructor(@Inject('environment') environment: any) {\n    this.environment = environment\n  }\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    if (this.environment.production || !this.environment.dev) {\n      let backendUrlMappings = this.environment.backendMappings;\n      let requestUrl, serverUrl: string;\n      for (let urlMapping of backendUrlMappings) {\n        if (request.url.startsWith(urlMapping.mapping)) {\n          serverUrl = urlMapping.url;\n          if (serverUrl.endsWith('/')) {\n            serverUrl = serverUrl.substring(0, serverUrl.length - 1);\n          }\n          requestUrl = request.url.replace(urlMapping.mapping, serverUrl);\n          break;\n        }\n      }\n      request = request.clone({url: requestUrl});\n    }\n    return next.handle(request);\n  }\n}\n","/*\n * Copyright (c) 2019 ELM. All rights reserved.\n */\n\nexport * from \"./logging.service\";\n\n","/*\n * Copyright (c) 2019 ELM. All rights reserved.\n */\n\nimport {Inject, Injectable, Optional} from '@angular/core';\nimport {HttpEvent, HttpHandler, HttpHeaders, HttpInterceptor, HttpRequest, HttpResponse} from '@angular/common/http';\nimport {Observable, timer} from 'rxjs';\nimport {map} from 'rxjs/operators';\nimport {CookieService} from \"ngx-cookie-service\";\nimport {Router} from \"@angular/router\";\nimport {Logger} from \"../logging\";\n\nconst TOKEN_EXPIRY_COOKIE_NAME = 'X-SEC-TK-EXP';\nconst TOKEN_COOKIE_NAME = 'X-SEC-TK';\nconst CONTENT_TYPE_HEADER_NAME = 'Content-Type';\nconst USER_STORAGE_ITEM_KEY = 'currentUser';\n\nconst log = new Logger('Login');\n\nexport const PUBLIC_URL_PATTERNS: string = 'PUBLIC_URL_PATTERNS';\nexport const LOGIN_URL: string = 'LOGIN_URL';\n\n@Injectable()\nexport class JwtInterceptor implements HttpInterceptor {\n\n  public tokenExpiryDateTimerSubscription: any = null;\n\n  constructor(private cookieService: CookieService, private router: Router, @Inject('environment') private environment: any,\n              @Optional() @Inject(PUBLIC_URL_PATTERNS) private publicUrlPatterns: Array<String> = [],\n              @Optional() @Inject(LOGIN_URL) private loginUrl: string = '/login.html') {\n  }\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    let headers: HttpHeaders = request.headers;\n    if (request.headers.get(CONTENT_TYPE_HEADER_NAME) == null) {\n      headers = request.headers.append(CONTENT_TYPE_HEADER_NAME, 'application/json');\n    } else if (request.headers.get(CONTENT_TYPE_HEADER_NAME).startsWith(\"multipart/form-data\")) {\n      headers = request.headers.delete(CONTENT_TYPE_HEADER_NAME);\n    }\n\n    let currentUser = JSON.parse(localStorage.getItem(USER_STORAGE_ITEM_KEY));\n    if (currentUser && this.tokenExpiryDateTimerSubscription == null) {\n      this.refreshTokenTimer();\n    }\n\n    request = request.clone({headers});\n\n    const started = Date.now();\n    return next.handle(request).pipe(\n      map(event => {\n        if (event instanceof HttpResponse) {\n          if (!this.environment.production) {\n            const elapsed = Date.now() - started;\n            console.log(`Request for ${request.urlWithParams} took ${elapsed} ms.`);\n          }\n          if (this.cookieService.get(TOKEN_EXPIRY_COOKIE_NAME)) {\n            console.log(`found ${TOKEN_EXPIRY_COOKIE_NAME} with value [${this.cookieService.get(TOKEN_EXPIRY_COOKIE_NAME)}]`);\n            if (this.tokenExpiryDateTimerSubscription) {\n              this.tokenExpiryDateTimerSubscription.unsubscribe();\n              this.refreshTokenTimer();\n            }\n          }\n        }\n        return event;\n      })\n    );\n  }\n\n  refreshTokenTimer() {\n    let isPublicUrl: boolean = false;\n    this.publicUrlPatterns.forEach((urlPattern: string) => {\n      isPublicUrl = isPublicUrl || this.router.url.startsWith(urlPattern);\n    });\n    if (isPublicUrl && !this.router.url.startsWith(this.loginUrl)) {\n      // do nothing\n      log.debug('skipping public url...');\n      return;\n    }\n    log.debug('secured url, setting timer...');\n    let tokenExpiry: unknown = this.cookieService.get(TOKEN_EXPIRY_COOKIE_NAME);\n    this.tokenExpiryDateTimerSubscription = timer(tokenExpiry as number).subscribe(() => {\n      localStorage.removeItem(USER_STORAGE_ITEM_KEY);\n      this.cookieService.delete(TOKEN_EXPIRY_COOKIE_NAME);\n      this.cookieService.delete(TOKEN_COOKIE_NAME);\n      this.router.navigate([this.loginUrl], {replaceUrl: true});\n    });\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {\n  HttpEvent,\n  HttpHandler,\n  HttpHeaders,\n  HttpInterceptor,\n  HttpRequest,\n  HttpXsrfTokenExtractor\n} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {CookieService} from \"ngx-cookie-service\";\nimport {Router} from \"@angular/router\";\n\nconst CSRF_HEADER_NAME = 'X-XSRF-TOKEN';\n\n@Injectable()\nexport class CsrfInterceptor implements HttpInterceptor {\n\n\n  constructor(private cookieService: CookieService, private router: Router, private tokenExtractor: HttpXsrfTokenExtractor) {\n  }\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n\n    const token = this.tokenExtractor.getToken() as string;\n\n    // add authorization header with jwt token if available\n    let headers: HttpHeaders = request.headers;\n    if (token != null && request.headers.get(CSRF_HEADER_NAME) == null && request.method == 'POST') {\n      headers = request.headers.append(CSRF_HEADER_NAME, token);\n    }\n    request = request.clone({headers});\n    return next.handle(request);\n  }\n\n}\n","/*\n * Copyright (c) 2019 ELM. All rights reserved.\n */\n\nimport {Inject, Injectable} from '@angular/core';\nimport {HttpEvent, HttpHandler, HttpInterceptor, HttpRequest, HttpResponse} from '@angular/common/http';\nimport {Observable, of} from 'rxjs';\nimport {delay, dematerialize, materialize, mergeMap} from 'rxjs/operators';\nimport {Logger} from '../logging/logging.service';\n\nconst log = new Logger('MockInterceptor');\n\n@Injectable()\nexport class MockInterceptor implements HttpInterceptor {\n\n  private environment: any;\n\n  constructor(@Inject('environment') environment: any) {\n    this.environment = environment\n  }\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    // if mock is not enabled or we are not in dev environment, then do nothing\n    if (!this.environment.mock || !this.environment.dev) {\n      return next.handle(request);\n    }\n    log.debug('################## Mock is enabled');\n\n    // array in local storage for registered users\n    let users: any[] = JSON.parse(localStorage.getItem('users')) || [];\n\n    // wrap in delayed observable to simulate server api call\n    return of(null).pipe(mergeMap(() => {\n\n      // authenticate\n      if (request.url.indexOf('/api/auth/login') != -1 && request.method === 'POST') {\n        // if login details are valid return 200 OK with user details and fake jwt token\n        let body = {\n          authorities: [{\"authority\": \"DQS_ADMIN\"}],\n          principal: \"admin\",\n          name: \"admin\"\n        };\n\n        return of(new HttpResponse({status: 200, body: body}));\n      }\n\n      // logout\n      if (request.url.indexOf('/api/auth/logout') != -1 && request.method === 'POST') {\n        // if login details are valid return 200 OK with user details and fake jwt token\n        return of(new HttpResponse({status: 200, body: 'true'}));\n      }\n\n      // get users\n      if (request.url.indexOf('/api/users/list') != -1 && request.method === 'GET') {\n        // check for fake auth token in header and return users if valid, this security is implemented server side in a real application\n        users = JSON.parse('{\"content\":[{\"id\":21,\"dateOfBirthGregorian\":null,\"dateOfBirthHijri\":14401010,\"email\":\"myemail@mycompany.com\",\"familyName\":\"MyFamilyName\",\"firstName\":\"MyFirstName\",\"gender\":\"M\",\"grandFatherName\":null,\"subtribeName\":null,\"fatherName\":null,\"lastLoginDate\":null,\"mobileNumber\":555555555,\"nin\":1234444444,\"userName\":\"qweqwe\",\"avatarFile\":null,\"avatar\":null,\"numberOfTries\":0,\"password\":\"<CONFIDENTIAL>\",\"passwordHash\":\"<CONFIDENTIAL>\",\"preferredLanguage\":null,\"updateDate\":null,\"deleted\":false,\"activated\":true,\"blockDate\":null,\"blocked\":false,\"changePasswordRequired\":false,\"creationDate\":1548251767000,\"authorities\":[{\"id\":21,\"authority\":\"DQS_USER\"}],\"tokenExpiryDate\":null},{\"id\":22,\"dateOfBirthGregorian\":null,\"dateOfBirthHijri\":14401010,\"email\":\"myemail@mycompany.com\",\"familyName\":\"MyFamilyName\",\"firstName\":\"MyFirstName\",\"gender\":\"M\",\"grandFatherName\":null,\"subtribeName\":null,\"fatherName\":null,\"lastLoginDate\":null,\"mobileNumber\":555555555,\"nin\":1234444445,\"userName\":\"qweqwer\",\"avatarFile\":null,\"avatar\":null,\"numberOfTries\":0,\"password\":\"<CONFIDENTIAL>\",\"passwordHash\":\"<CONFIDENTIAL>\",\"preferredLanguage\":null,\"updateDate\":null,\"deleted\":false,\"activated\":true,\"blockDate\":null,\"blocked\":false,\"changePasswordRequired\":false,\"creationDate\":1548251787000,\"authorities\":[{\"id\":22,\"authority\":\"DQS_USER\"}],\"tokenExpiryDate\":null},{\"id\":23,\"dateOfBirthGregorian\":null,\"dateOfBirthHijri\":14401010,\"email\":\"myemail@mycompany.com\",\"familyName\":\"MyFamilyName\",\"firstName\":\"MyFirstName\",\"gender\":\"M\",\"grandFatherName\":null,\"subtribeName\":null,\"fatherName\":null,\"lastLoginDate\":null,\"mobileNumber\":555555555,\"nin\":1234444446,\"userName\":\"qweqwerq\",\"avatarFile\":null,\"avatar\":null,\"numberOfTries\":0,\"password\":\"<CONFIDENTIAL>\",\"passwordHash\":\"<CONFIDENTIAL>\",\"preferredLanguage\":null,\"updateDate\":null,\"deleted\":false,\"activated\":true,\"blockDate\":null,\"blocked\":false,\"changePasswordRequired\":false,\"creationDate\":1548251908000,\"authorities\":[{\"id\":23,\"authority\":\"DQS_USER\"}],\"tokenExpiryDate\":null},{\"id\":24,\"dateOfBirthGregorian\":null,\"dateOfBirthHijri\":14401010,\"email\":\"myemail@mycompany.com\",\"familyName\":\"MyFamilyName\",\"firstName\":\"MyFirstName\",\"gender\":\"M\",\"grandFatherName\":null,\"subtribeName\":null,\"fatherName\":null,\"lastLoginDate\":null,\"mobileNumber\":555555555,\"nin\":1234444447,\"userName\":\"qweqwerw\",\"avatarFile\":null,\"avatar\":null,\"numberOfTries\":0,\"password\":\"<CONFIDENTIAL>\",\"passwordHash\":\"<CONFIDENTIAL>\",\"preferredLanguage\":null,\"updateDate\":null,\"deleted\":false,\"activated\":true,\"blockDate\":null,\"blocked\":false,\"changePasswordRequired\":false,\"creationDate\":1548251909000,\"authorities\":[{\"id\":24,\"authority\":\"DQS_USER\"}],\"tokenExpiryDate\":null},{\"id\":25,\"dateOfBirthGregorian\":null,\"dateOfBirthHijri\":14401010,\"email\":\"myemail@mycompany.com\",\"familyName\":\"MyFamilyName\",\"firstName\":\"MyFirstName\",\"gender\":\"M\",\"grandFatherName\":null,\"subtribeName\":null,\"fatherName\":null,\"lastLoginDate\":null,\"mobileNumber\":555555555,\"nin\":1234444448,\"userName\":\"qweqwere\",\"avatarFile\":null,\"avatar\":null,\"numberOfTries\":0,\"password\":\"<CONFIDENTIAL>\",\"passwordHash\":\"<CONFIDENTIAL>\",\"preferredLanguage\":null,\"updateDate\":null,\"deleted\":false,\"activated\":true,\"blockDate\":null,\"blocked\":false,\"changePasswordRequired\":false,\"creationDate\":1548251909000,\"authorities\":[{\"id\":25,\"authority\":\"DQS_USER\"}],\"tokenExpiryDate\":null},{\"id\":26,\"dateOfBirthGregorian\":null,\"dateOfBirthHijri\":14401010,\"email\":\"myemail@mycompany.com\",\"familyName\":\"MyFamilyName\",\"firstName\":\"MyFirstName\",\"gender\":\"M\",\"grandFatherName\":null,\"subtribeName\":null,\"fatherName\":null,\"lastLoginDate\":null,\"mobileNumber\":555555555,\"nin\":1234444449,\"userName\":\"qweqwerr\",\"avatarFile\":null,\"avatar\":null,\"numberOfTries\":0,\"password\":\"<CONFIDENTIAL>\",\"passwordHash\":\"<CONFIDENTIAL>\",\"preferredLanguage\":null,\"updateDate\":null,\"deleted\":false,\"activated\":true,\"blockDate\":null,\"blocked\":false,\"changePasswordRequired\":false,\"creationDate\":1548251909000,\"authorities\":[{\"id\":26,\"authority\":\"DQS_USER\"}],\"tokenExpiryDate\":null},{\"id\":27,\"dateOfBirthGregorian\":null,\"dateOfBirthHijri\":14401010,\"email\":\"myemail@mycompany.com\",\"familyName\":\"MyFamilyName\",\"firstName\":\"MyFirstName\",\"gender\":\"M\",\"grandFatherName\":null,\"subtribeName\":null,\"fatherName\":null,\"lastLoginDate\":null,\"mobileNumber\":555555555,\"nin\":1234444450,\"userName\":\"qweqwert\",\"avatarFile\":null,\"avatar\":null,\"numberOfTries\":0,\"password\":\"<CONFIDENTIAL>\",\"passwordHash\":\"<CONFIDENTIAL>\",\"preferredLanguage\":null,\"updateDate\":null,\"deleted\":false,\"activated\":true,\"blockDate\":null,\"blocked\":false,\"changePasswordRequired\":false,\"creationDate\":1548251909000,\"authorities\":[{\"id\":27,\"authority\":\"DQS_USER\"}],\"tokenExpiryDate\":null},{\"id\":28,\"dateOfBirthGregorian\":null,\"dateOfBirthHijri\":14401010,\"email\":\"myemail@mycompany.com\",\"familyName\":\"MyFamilyName\",\"firstName\":\"MyFirstName\",\"gender\":\"M\",\"grandFatherName\":null,\"subtribeName\":null,\"fatherName\":null,\"lastLoginDate\":null,\"mobileNumber\":555555555,\"nin\":1234444452,\"userName\":\"qweqweru\",\"avatarFile\":null,\"avatar\":null,\"numberOfTries\":0,\"password\":\"<CONFIDENTIAL>\",\"passwordHash\":\"<CONFIDENTIAL>\",\"preferredLanguage\":null,\"updateDate\":null,\"deleted\":false,\"activated\":true,\"blockDate\":null,\"blocked\":false,\"changePasswordRequired\":false,\"creationDate\":1548251910000,\"authorities\":[{\"id\":28,\"authority\":\"DQS_USER\"}],\"tokenExpiryDate\":null},{\"id\":29,\"dateOfBirthGregorian\":null,\"dateOfBirthHijri\":14401010,\"email\":\"myemail@mycompany.com\",\"familyName\":\"MyFamilyName\",\"firstName\":\"MyFirstName\",\"gender\":\"M\",\"grandFatherName\":null,\"subtribeName\":null,\"fatherName\":null,\"lastLoginDate\":null,\"mobileNumber\":555555555,\"nin\":1234444451,\"userName\":\"qweqwery\",\"avatarFile\":null,\"avatar\":null,\"numberOfTries\":0,\"password\":\"<CONFIDENTIAL>\",\"passwordHash\":\"<CONFIDENTIAL>\",\"preferredLanguage\":null,\"updateDate\":null,\"deleted\":false,\"activated\":true,\"blockDate\":null,\"blocked\":false,\"changePasswordRequired\":false,\"creationDate\":1548251910000,\"authorities\":[{\"id\":29,\"authority\":\"DQS_USER\"}],\"tokenExpiryDate\":null},{\"id\":30,\"dateOfBirthGregorian\":null,\"dateOfBirthHijri\":14401010,\"email\":\"myemail@mycompany.com\",\"familyName\":\"MyFamilyName\",\"firstName\":\"MyFirstName\",\"gender\":\"M\",\"grandFatherName\":null,\"subtribeName\":null,\"fatherName\":null,\"lastLoginDate\":null,\"mobileNumber\":555555555,\"nin\":1234444454,\"userName\":\"qweqwero\",\"avatarFile\":null,\"avatar\":null,\"numberOfTries\":0,\"password\":\"<CONFIDENTIAL>\",\"passwordHash\":\"<CONFIDENTIAL>\",\"preferredLanguage\":null,\"updateDate\":null,\"deleted\":false,\"activated\":true,\"blockDate\":null,\"blocked\":false,\"changePasswordRequired\":false,\"creationDate\":1548251910000,\"authorities\":[{\"id\":30,\"authority\":\"DQS_USER\"}],\"tokenExpiryDate\":null}],\"pageable\":{\"sort\":{\"sorted\":false,\"unsorted\":true,\"empty\":true},\"pageNumber\":2,\"pageSize\":10,\"offset\":20,\"unpaged\":false,\"paged\":true},\"last\":false,\"totalPages\":8,\"totalElements\":71,\"sort\":{\"sorted\":false,\"unsorted\":true,\"empty\":true},\"first\":false,\"numberOfElements\":10,\"size\":10,\"number\":2,\"empty\":false}');\n        return of(new HttpResponse({status: 200, body: users}));\n      }\n\n      // get user details\n      if (request.url.indexOf('/api/users/find') != -1 && request.method === 'GET') {\n        // check for fake auth token in header and return users if valid, this security is implemented server side in a real application\n        let body = JSON.parse('{\"id\":22,\"dateOfBirthGregorian\":null,\"dateOfBirthHijri\":14401010,\"email\":\"myemail@mycompany.com\",\"familyName\":\"MyFamilyName\",\"firstName\":\"MyFirstName\",\"gender\":\"M\",\"grandFatherName\":null,\"subtribeName\":null,\"fatherName\":null,\"lastLoginDate\":null,\"mobileNumber\":555555555,\"nin\":1234444445,\"userName\":\"qweqwer\",\"avatarFile\":null,\"avatar\":null,\"numberOfTries\":0,\"password\":\"<CONFIDENTIAL>\",\"passwordHash\":\"<CONFIDENTIAL>\",\"preferredLanguage\":null,\"updateDate\":null,\"deleted\":false,\"activated\":true,\"blockDate\":null,\"blocked\":false,\"changePasswordRequired\":false,\"creationDate\":1548251787000,\"authorities\":[{\"id\":22,\"authority\":\"DQS_USER\"}],\"tokenExpiryDate\":null}');\n        return of(new HttpResponse({status: 200, body: body}));\n      }\n\n      // pass through any requests not handled above\n      return next.handle(request);\n\n    }))\n\n      // call materialize and dematerialize to ensure delay even if an error is thrown (https://github.com/Reactive-Extensions/RxJS/issues/648)\n      .pipe(materialize())\n      .pipe(delay(500))\n      .pipe(dematerialize());\n  }\n}\n","/*\n * Copyright (c) 2019 ELM. All rights reserved.\n */\n\nimport {Inject, Injectable, InjectionToken, Injector, Optional} from '@angular/core';\nimport {HttpClient, HttpEvent, HttpHandler, HttpInterceptor, HttpRequest} from '@angular/common/http';\nimport {Observable} from 'rxjs';\n\nimport {ErrorHandlerInterceptor} from './error-handler.interceptor';\nimport {CacheInterceptor} from './cache.interceptor';\nimport {ApiPrefixInterceptor} from './api-prefix.interceptor';\nimport {JwtInterceptor} from './jwt.interceptor';\nimport {CsrfInterceptor} from \"./csrf.interceptor\";\nimport {MockInterceptor} from \"./mock.interceptor\";\n\n// HttpClient is declared in a re-exported module, so we have to extend the original module to make it work properly\n// (see https://github.com/Microsoft/TypeScript/issues/13897)\ndeclare module '@angular/common/http/http' {\n\n  // Augment HttpClient with the added configuration methods from HttpService, to allow in-place replacement of\n  // HttpClient with HttpService using dependency injection\n  export interface HttpClient {\n\n    /**\n     * Enables caching for this request.\n     * @param {boolean} forceUpdate Forces request to be made and updates cache entry.\n     * @return {HttpClient} The new instance.\n     */\n    cache(forceUpdate?: boolean): HttpClient;\n\n    /**\n     * Skips default error handler for this request.\n     * @return {HttpClient} The new instance.\n     */\n    skipErrorHandler(): HttpClient;\n\n    /**\n     * Do not use API prefix for this request.\n     * @return {HttpClient} The new instance.\n     */\n    disableApiPrefix(): HttpClient;\n\n  }\n\n}\n\n// From @angular/common/http/src/interceptor: allows to chain interceptors\nclass HttpInterceptorHandler implements HttpHandler {\n\n  constructor(private next: HttpHandler, private interceptor: HttpInterceptor) {\n  }\n\n  handle(request: HttpRequest<any>): Observable<HttpEvent<any>> {\n    return this.interceptor.intercept(request, this.next);\n  }\n\n}\n\n/**\n * Allows to override default dynamic interceptors that can be disabled with the HttpService extension.\n * Except for very specific needs, you should better configure these interceptors directly in the constructor below\n * for better readability.\n *\n * For static interceptors that should always be enabled (like ApiPrefixInterceptor), use the standard\n * HTTP_INTERCEPTORS token.\n */\nexport const HTTP_DYNAMIC_INTERCEPTORS = new InjectionToken<HttpInterceptor>('HTTP_DYNAMIC_INTERCEPTORS');\n\n/**\n * Extends HttpClient with per request configuration using dynamic interceptors.\n */\n@Injectable()\nexport class HttpService extends HttpClient {\n\n  constructor(private httpHandler: HttpHandler,\n              private injector: Injector,\n              @Optional() @Inject(HTTP_DYNAMIC_INTERCEPTORS) private interceptors: HttpInterceptor[] = []) {\n    super(httpHandler);\n\n    if (!this.interceptors) {\n      // Configure default interceptors that can be disabled here\n      this.interceptors = [\n        this.injector.get(ApiPrefixInterceptor),\n        this.injector.get(ErrorHandlerInterceptor),\n        this.injector.get(MockInterceptor),\n        this.injector.get(JwtInterceptor),\n        this.injector.get(CsrfInterceptor)\n      ];\n    }\n  }\n\n  cache(forceUpdate?: boolean): HttpService {\n    const cacheInterceptor = this.injector.get(CacheInterceptor).configure({update: forceUpdate});\n    return this.addInterceptor(cacheInterceptor);\n  }\n\n  skipErrorHandler(): HttpService {\n    return this.removeInterceptor(ErrorHandlerInterceptor);\n  }\n\n  disableApiPrefix(): HttpService {\n    return this.removeInterceptor(ApiPrefixInterceptor);\n  }\n\n  disableDefaultMock(): HttpService {\n    return this.removeInterceptor(MockInterceptor);\n  }\n\n  addMock(mockInterceptor: HttpInterceptor): HttpService {\n    return this.addInterceptor(mockInterceptor);\n  }\n\n  // Override the original method to wire interceptors when triggering the request.\n  request(method?: any, url?: any, options?: any): any {\n    const handler = this.interceptors.reduceRight(\n      (next, interceptor) => new HttpInterceptorHandler(next, interceptor),\n      this.httpHandler\n    );\n    return new HttpClient(handler).request(method, url, options);\n  }\n\n  private removeInterceptor(interceptorType: Function): HttpService {\n    return new HttpService(\n      this.httpHandler,\n      this.injector,\n      this.interceptors.filter(i => !(i instanceof interceptorType))\n    );\n  }\n\n  private addInterceptor(interceptor: HttpInterceptor): HttpService {\n    return new HttpService(\n      this.httpHandler,\n      this.injector,\n      this.interceptors.concat([interceptor])\n    );\n  }\n\n}\n","/*\n * Copyright (c) 2019 ELM. All rights reserved.\n */\n\nimport {ModuleWithProviders, NgModule, Optional, SkipSelf} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {HttpClient, HttpClientModule} from '@angular/common/http';\nimport {RouteReuseStrategy, RouterModule} from '@angular/router';\nimport {TranslateLoader, TranslateModule} from '@ngx-translate/core';\n\nimport {RouteReusableStrategy} from './route/route-reusable-strategy';\nimport {I18nService} from './i18n/i18n.service';\nimport {HttpService} from './http/http.service';\nimport {HttpCacheService} from './http/http-cache.service';\nimport {ApiPrefixInterceptor} from './http/api-prefix.interceptor';\nimport {ErrorHandlerInterceptor} from './http/error-handler.interceptor';\nimport {CacheInterceptor} from './http/cache.interceptor';\nimport {JwtInterceptor, LOGIN_URL, PUBLIC_URL_PATTERNS} from './http/jwt.interceptor';\nimport {TranslateHttpLoader} from \"@ngx-translate/http-loader\";\nimport {CookieService} from \"ngx-cookie-service\";\nimport {CsrfInterceptor} from \"./http/csrf.interceptor\";\nimport {MockInterceptor} from \"./http/mock.interceptor\";\n\nexport const I18N_FOLDER_PATH: string = './assets/i18n/';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    HttpClientModule,\n    TranslateModule.forRoot({\n      loader: {\n        provide: TranslateLoader,\n        useFactory: (HttpLoaderFactory),\n        deps: [HttpClient, I18N_FOLDER_PATH]\n      }\n    }),\n    RouterModule\n  ],\n  declarations: [],\n  providers: [\n    I18nService,\n    HttpCacheService,\n    ApiPrefixInterceptor,\n    ErrorHandlerInterceptor,\n    CacheInterceptor,\n    CookieService,\n    JwtInterceptor,\n    CsrfInterceptor,\n    MockInterceptor,\n    {\n      provide: HttpClient,\n      useClass: HttpService\n    },\n    {\n      provide: RouteReuseStrategy,\n      useClass: RouteReusableStrategy\n    }\n  ]\n})\nexport class DccCommonsNgServicesModule {\n  constructor(@Optional() @SkipSelf() parentModule: DccCommonsNgServicesModule) {\n    // Import guard\n    if (parentModule) {\n      throw new Error(`${parentModule} has already been loaded. Import Services module in the AppModule only.`);\n    }\n  }\n\n  static forRoot(@Optional() publicUrlPatterns: Array<string> = [], @Optional() loginUrl: string, @Optional() i18nFolderPath: string): ModuleWithProviders {\n    return {\n      ngModule: DccCommonsNgServicesModule,\n      providers: [\n        {provide: PUBLIC_URL_PATTERNS, useValue: publicUrlPatterns},\n        {provide: LOGIN_URL, useValue: loginUrl},\n        {provide: I18N_FOLDER_PATH, useValue: i18nFolderPath}\n      ]\n    }\n  }\n\n}\n\nexport function HttpLoaderFactory(http: HttpClient, i18nFolderPath: string) {\n  return new TranslateHttpLoader(http, i18nFolderPath, '.json');\n}\n","/*\n * Copyright (c) 2019 ELM. All rights reserved.\n */\n\nexport * from './http.service';\nexport * from './http-cache.service';\nexport * from './api-prefix.interceptor';\nexport * from './error-handler.interceptor';\nexport * from './cache.interceptor';\nexport * from './jwt.interceptor';\nexport * from \"./csrf.interceptor\";\nexport * from \"./mock.interceptor\";\n","/*\n * Copyright (c) 2019 ELM. All rights reserved.\n */\n\nexport * from './i18n.service';\n","/*\n * Copyright (c) 2019 ELM. All rights reserved.\n */\n\nimport {Route as ngRoute, Routes} from '@angular/router';\nimport {animate, animateChild, group, query, sequence, style, transition, trigger} from '@angular/animations';\n\nexport const RouteAnimations = trigger('routerAnimations', [\n  transition('* <=> *', [\n\n    // css styles at start of transition\n    //style({ opacity: 0 }),\n\n    // animation and styles at end of transition\n    //animate('0.5s', style({ opacity: 1 }))\n\n    query(':enter, :leave', style({position: 'fixed', width: '100%'}), {optional: true}),\n    query(':enter', style({transform: 'translateX(100%)'}), {optional: true}),\n\n    sequence([\n      query(':leave', animateChild(), {optional: true}),\n      group([\n        query(':leave', [\n          style({transform: 'translateX(0%)'}),\n          animate('500ms cubic-bezier(.75,-0.48,.26,1.52)',\n            style({transform: 'translateX(-100%)'})\n          )\n        ], {optional: true}),\n        query(':enter', [\n          style({transform: 'translateX(100%)'}),\n          animate('500ms cubic-bezier(.75,-0.48,.26,1.52)',\n            style({transform: 'translateX(0%)'})\n          )\n        ], {optional: true}),\n      ]),\n\n      query(':enter', animateChild(), {optional: true}),\n\n    ])\n  ])\n]);\n\n/**\n * Provides helper methods to create routes.\n */\nexport class Route {\n\n  /**\n   * Creates routes using the shell component and authentication.\n   * @param routes The routes to add.\n   * @return {Route} The new route using shell as the base.\n   */\n  static withShell(routes: Routes, appLayout: any, authGuard: any): ngRoute {\n    return {\n      path: '',\n      component: appLayout,\n      children: routes,\n      canActivate: [authGuard],\n      // Reuse ShellComponent instance when navigating between child views\n      data: {reuse: true}\n    };\n  }\n\n}\n","/*\n * Copyright (c) 2019 ELM. All rights reserved.\n */\n\nexport * from './route.service';\nexport * from './route-reusable-strategy';\n","/*\n * Copyright (c) 2019 ELM. All rights reserved.\n */\n\nexport * from './services.module';\nexport * from './http';\nexport * from \"./logging\";\nexport * from './i18n';\nexport * from './route';\n","/*\n * Public API Surface of services\n */\n\n\nexport * from './lib/index';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n\nexport {ApiPrefixInterceptor as ɵc} from './lib/http/api-prefix.interceptor';\nexport {CacheInterceptor as ɵe} from './lib/http/cache.interceptor';\nexport {CsrfInterceptor as ɵi} from './lib/http/csrf.interceptor';\nexport {ErrorHandlerInterceptor as ɵd} from './lib/http/error-handler.interceptor';\nexport {HttpCacheService as ɵb} from './lib/http/http-cache.service';\nexport {HTTP_DYNAMIC_INTERCEPTORS as ɵk,HttpService as ɵl} from './lib/http/http.service';\nexport {JwtInterceptor as ɵh,LOGIN_URL as ɵg,PUBLIC_URL_PATTERNS as ɵf} from './lib/http/jwt.interceptor';\nexport {MockInterceptor as ɵj} from './lib/http/mock.interceptor';\nexport {I18nService as ɵa} from './lib/i18n/i18n.service';\nexport {RouteReusableStrategy as ɵm} from './lib/route/route-reusable-strategy';"]}