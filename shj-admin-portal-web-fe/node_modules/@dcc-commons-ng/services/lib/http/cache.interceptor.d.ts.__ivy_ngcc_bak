import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';
import { Observable } from 'rxjs';
import { HttpCacheService } from './http-cache.service';
/**
 * Caches HTTP requests.
 * Use ExtendedHttpClient fluent API to configure caching for each request.
 */
export declare class CacheInterceptor implements HttpInterceptor {
    private httpCacheService;
    private forceUpdate;
    constructor(httpCacheService: HttpCacheService);
    /**
     * Configures interceptor options
     * @param {{update: boolean}} options If update option is enabled, forces request to be made and updates cache entry.
     * @return {CacheInterceptor} The configured instance.
     */
    configure(options?: {
        update?: boolean;
    } | null): CacheInterceptor;
    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>>;
}
