import { __extends } from "tslib";
import { RouteReuseStrategy } from '@angular/router';
/**
 * A route strategy allowing for explicit route reuse.
 * Used as a workaround for https://github.com/angular/angular/issues/18374
 * To reuse a given route, add `data: { reuse: true }` to the route definition.
 */
var RouteReusableStrategy = /** @class */ (function (_super) {
    __extends(RouteReusableStrategy, _super);
    function RouteReusableStrategy() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    RouteReusableStrategy.prototype.shouldDetach = function (route) {
        return false;
    };
    RouteReusableStrategy.prototype.store = function (route, detachedTree) {
    };
    RouteReusableStrategy.prototype.shouldAttach = function (route) {
        return false;
    };
    RouteReusableStrategy.prototype.retrieve = function (route) {
        return null;
    };
    RouteReusableStrategy.prototype.shouldReuseRoute = function (future, curr) {
        return (future.routeConfig === curr.routeConfig) || future.data.reuse;
    };
    return RouteReusableStrategy;
}(RouteReuseStrategy));
export { RouteReusableStrategy };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicm91dGUtcmV1c2FibGUtc3RyYXRlZ3kuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZGNjLWNvbW1vbnMtbmcvc2VydmljZXMvIiwic291cmNlcyI6WyJsaWIvcm91dGUvcm91dGUtcmV1c2FibGUtc3RyYXRlZ3kudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBOEMsa0JBQWtCLEVBQUMsTUFBTSxpQkFBaUIsQ0FBQztBQUVoRzs7OztHQUlHO0FBQ0g7SUFBMkMseUNBQWtCO0lBQTdEOztJQXFCQSxDQUFDO0lBbkJRLDRDQUFZLEdBQW5CLFVBQW9CLEtBQTZCO1FBQy9DLE9BQU8sS0FBSyxDQUFDO0lBQ2YsQ0FBQztJQUVNLHFDQUFLLEdBQVosVUFBYSxLQUE2QixFQUFFLFlBQXdDO0lBQ3BGLENBQUM7SUFFTSw0Q0FBWSxHQUFuQixVQUFvQixLQUE2QjtRQUMvQyxPQUFPLEtBQUssQ0FBQztJQUNmLENBQUM7SUFFTSx3Q0FBUSxHQUFmLFVBQWdCLEtBQTZCO1FBQzNDLE9BQU8sSUFBSSxDQUFDO0lBQ2QsQ0FBQztJQUVNLGdEQUFnQixHQUF2QixVQUF3QixNQUE4QixFQUFFLElBQTRCO1FBQ2xGLE9BQU8sQ0FBQyxNQUFNLENBQUMsV0FBVyxLQUFLLElBQUksQ0FBQyxXQUFXLENBQUMsSUFBSSxNQUFNLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQztJQUN4RSxDQUFDO0lBRUgsNEJBQUM7QUFBRCxDQUFDLEFBckJELENBQTJDLGtCQUFrQixHQXFCNUQiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0FjdGl2YXRlZFJvdXRlU25hcHNob3QsIERldGFjaGVkUm91dGVIYW5kbGUsIFJvdXRlUmV1c2VTdHJhdGVneX0gZnJvbSAnQGFuZ3VsYXIvcm91dGVyJztcblxuLyoqXG4gKiBBIHJvdXRlIHN0cmF0ZWd5IGFsbG93aW5nIGZvciBleHBsaWNpdCByb3V0ZSByZXVzZS5cbiAqIFVzZWQgYXMgYSB3b3JrYXJvdW5kIGZvciBodHRwczovL2dpdGh1Yi5jb20vYW5ndWxhci9hbmd1bGFyL2lzc3Vlcy8xODM3NFxuICogVG8gcmV1c2UgYSBnaXZlbiByb3V0ZSwgYWRkIGBkYXRhOiB7IHJldXNlOiB0cnVlIH1gIHRvIHRoZSByb3V0ZSBkZWZpbml0aW9uLlxuICovXG5leHBvcnQgY2xhc3MgUm91dGVSZXVzYWJsZVN0cmF0ZWd5IGV4dGVuZHMgUm91dGVSZXVzZVN0cmF0ZWd5IHtcblxuICBwdWJsaWMgc2hvdWxkRGV0YWNoKHJvdXRlOiBBY3RpdmF0ZWRSb3V0ZVNuYXBzaG90KTogYm9vbGVhbiB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgcHVibGljIHN0b3JlKHJvdXRlOiBBY3RpdmF0ZWRSb3V0ZVNuYXBzaG90LCBkZXRhY2hlZFRyZWU6IERldGFjaGVkUm91dGVIYW5kbGUgfCBudWxsKTogdm9pZCB7XG4gIH1cblxuICBwdWJsaWMgc2hvdWxkQXR0YWNoKHJvdXRlOiBBY3RpdmF0ZWRSb3V0ZVNuYXBzaG90KTogYm9vbGVhbiB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgcHVibGljIHJldHJpZXZlKHJvdXRlOiBBY3RpdmF0ZWRSb3V0ZVNuYXBzaG90KTogRGV0YWNoZWRSb3V0ZUhhbmRsZSB8IG51bGwge1xuICAgIHJldHVybiBudWxsO1xuICB9XG5cbiAgcHVibGljIHNob3VsZFJldXNlUm91dGUoZnV0dXJlOiBBY3RpdmF0ZWRSb3V0ZVNuYXBzaG90LCBjdXJyOiBBY3RpdmF0ZWRSb3V0ZVNuYXBzaG90KTogYm9vbGVhbiB7XG4gICAgcmV0dXJuIChmdXR1cmUucm91dGVDb25maWcgPT09IGN1cnIucm91dGVDb25maWcpIHx8IGZ1dHVyZS5kYXRhLnJldXNlO1xuICB9XG5cbn1cbiJdfQ==