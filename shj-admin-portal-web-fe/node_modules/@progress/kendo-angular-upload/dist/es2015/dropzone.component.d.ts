/**-----------------------------------------------------------------------------------------
* Copyright © 2020 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { ElementRef, Renderer2 } from '@angular/core';
import { LocalizationService } from '@progress/kendo-angular-l10n';
import { DropZoneBase } from './dropzone-base';
/**
 * Represents the [Kendo UI UploadDropZone component for Angular]({% slug overview_upload %}).
 */
import * as ɵngcc0 from '@angular/core';
export declare class UploadDropZoneComponent extends DropZoneBase {
    private localization;
    hostClass: boolean;
    readonly dirAttribute: string;
    /**
     * Defines the id of the component.
     * It is used to associate it with an existing Upload or FileSelect component.
     */
    zoneId: string;
    /**
     * Defines the name for an existing icon in a Kendo UI theme.
     * The icon is rendered inside the DropZone by a `span.k-icon` element.
     */
    icon: string;
    /**
     * Defines a CSS class or multiple classes separated by spaces,
     * which are applied to a span element.
     * Allows the usage of custom icons.
     */
    iconClass: string;
    private direction;
    private localizationChangeSubscription;
    constructor(element: ElementRef, renderer: Renderer2, localization: LocalizationService);
    /**
     * @hidden
     */
    textFor(key: string): string;
    /**
     * @hidden
     */
    readonly iconClasses: string;
    ngOnDestroy(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<UploadDropZoneComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<UploadDropZoneComponent, "kendo-uploaddropzone", ["kendoUploadDropZone"], { "zoneId": "zoneId"; "icon": "icon"; "iconClass": "iconClass"; }, {}, never, ["*"]>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHJvcHpvbmUuY29tcG9uZW50LmQudHMiLCJzb3VyY2VzIjpbImRyb3B6b25lLmNvbXBvbmVudC5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiLyoqLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiogQ29weXJpZ2h0IMKpIDIwMjAgUHJvZ3Jlc3MgU29mdHdhcmUgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4qIExpY2Vuc2VkIHVuZGVyIGNvbW1lcmNpYWwgbGljZW5zZS4gU2VlIExJQ0VOU0UubWQgaW4gdGhlIHByb2plY3Qgcm9vdCBmb3IgbW9yZSBpbmZvcm1hdGlvblxuKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuaW1wb3J0IHsgRWxlbWVudFJlZiwgUmVuZGVyZXIyIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBMb2NhbGl6YXRpb25TZXJ2aWNlIH0gZnJvbSAnQHByb2dyZXNzL2tlbmRvLWFuZ3VsYXItbDEwbic7XG5pbXBvcnQgeyBEcm9wWm9uZUJhc2UgfSBmcm9tICcuL2Ryb3B6b25lLWJhc2UnO1xuLyoqXG4gKiBSZXByZXNlbnRzIHRoZSBbS2VuZG8gVUkgVXBsb2FkRHJvcFpvbmUgY29tcG9uZW50IGZvciBBbmd1bGFyXSh7JSBzbHVnIG92ZXJ2aWV3X3VwbG9hZCAlfSkuXG4gKi9cbmV4cG9ydCBkZWNsYXJlIGNsYXNzIFVwbG9hZERyb3Bab25lQ29tcG9uZW50IGV4dGVuZHMgRHJvcFpvbmVCYXNlIHtcbiAgICBwcml2YXRlIGxvY2FsaXphdGlvbjtcbiAgICBob3N0Q2xhc3M6IGJvb2xlYW47XG4gICAgcmVhZG9ubHkgZGlyQXR0cmlidXRlOiBzdHJpbmc7XG4gICAgLyoqXG4gICAgICogRGVmaW5lcyB0aGUgaWQgb2YgdGhlIGNvbXBvbmVudC5cbiAgICAgKiBJdCBpcyB1c2VkIHRvIGFzc29jaWF0ZSBpdCB3aXRoIGFuIGV4aXN0aW5nIFVwbG9hZCBvciBGaWxlU2VsZWN0IGNvbXBvbmVudC5cbiAgICAgKi9cbiAgICB6b25lSWQ6IHN0cmluZztcbiAgICAvKipcbiAgICAgKiBEZWZpbmVzIHRoZSBuYW1lIGZvciBhbiBleGlzdGluZyBpY29uIGluIGEgS2VuZG8gVUkgdGhlbWUuXG4gICAgICogVGhlIGljb24gaXMgcmVuZGVyZWQgaW5zaWRlIHRoZSBEcm9wWm9uZSBieSBhIGBzcGFuLmstaWNvbmAgZWxlbWVudC5cbiAgICAgKi9cbiAgICBpY29uOiBzdHJpbmc7XG4gICAgLyoqXG4gICAgICogRGVmaW5lcyBhIENTUyBjbGFzcyBvciBtdWx0aXBsZSBjbGFzc2VzIHNlcGFyYXRlZCBieSBzcGFjZXMsXG4gICAgICogd2hpY2ggYXJlIGFwcGxpZWQgdG8gYSBzcGFuIGVsZW1lbnQuXG4gICAgICogQWxsb3dzIHRoZSB1c2FnZSBvZiBjdXN0b20gaWNvbnMuXG4gICAgICovXG4gICAgaWNvbkNsYXNzOiBzdHJpbmc7XG4gICAgcHJpdmF0ZSBkaXJlY3Rpb247XG4gICAgcHJpdmF0ZSBsb2NhbGl6YXRpb25DaGFuZ2VTdWJzY3JpcHRpb247XG4gICAgY29uc3RydWN0b3IoZWxlbWVudDogRWxlbWVudFJlZiwgcmVuZGVyZXI6IFJlbmRlcmVyMiwgbG9jYWxpemF0aW9uOiBMb2NhbGl6YXRpb25TZXJ2aWNlKTtcbiAgICAvKipcbiAgICAgKiBAaGlkZGVuXG4gICAgICovXG4gICAgdGV4dEZvcihrZXk6IHN0cmluZyk6IHN0cmluZztcbiAgICAvKipcbiAgICAgKiBAaGlkZGVuXG4gICAgICovXG4gICAgcmVhZG9ubHkgaWNvbkNsYXNzZXM6IHN0cmluZztcbiAgICBuZ09uRGVzdHJveSgpOiB2b2lkO1xufVxuIl19