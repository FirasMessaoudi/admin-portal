/**-----------------------------------------------------------------------------------------
* Copyright © 2020 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { ElementRef, Renderer2, NgZone } from '@angular/core';
import { FileRestrictions } from './types';
import { DropZoneBase } from './dropzone-base';
import { UploadService } from './upload.service';
/**
 * @hidden
 */
import * as ɵngcc0 from '@angular/core';
export declare class DropZoneInternalDirective extends DropZoneBase {
    private ngZone;
    protected uploadService: UploadService;
    disabled: boolean;
    multiple: boolean;
    restrictions: FileRestrictions;
    initialClassName: boolean;
    private unsubscribeDocumentDragEnter;
    private unsubscribeDocumentDragOver;
    private lastDragDocument;
    private hideIntervalDocument;
    private activeClass;
    constructor(element: ElementRef, renderer: Renderer2, ngZone: NgZone, uploadService: UploadService);
    ngOnDestroy(): void;
    onDocumentDragEnter(): boolean;
    /**
     * @hidden
     */
    onDocumentDragOver(): boolean;
    onDropListener(event: any): boolean;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<DropZoneInternalDirective, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<DropZoneInternalDirective, "      [kendoUploadInternalDropZone],      [kendoFileSelectInternalDropZone]    ", never, { "disabled": "disabled"; "multiple": "multiple"; "restrictions": "restrictions"; }, {}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHJvcHpvbmUtaW50ZXJuYWwuZGlyZWN0aXZlLmQudHMiLCJzb3VyY2VzIjpbImRyb3B6b25lLWludGVybmFsLmRpcmVjdGl2ZS5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyIvKiotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuKiBDb3B5cmlnaHQgwqkgMjAyMCBQcm9ncmVzcyBTb2Z0d2FyZSBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiogTGljZW5zZWQgdW5kZXIgY29tbWVyY2lhbCBsaWNlbnNlLiBTZWUgTElDRU5TRS5tZCBpbiB0aGUgcHJvamVjdCByb290IGZvciBtb3JlIGluZm9ybWF0aW9uXG4qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG5pbXBvcnQgeyBFbGVtZW50UmVmLCBSZW5kZXJlcjIsIE5nWm9uZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgRmlsZVJlc3RyaWN0aW9ucyB9IGZyb20gJy4vdHlwZXMnO1xuaW1wb3J0IHsgRHJvcFpvbmVCYXNlIH0gZnJvbSAnLi9kcm9wem9uZS1iYXNlJztcbmltcG9ydCB7IFVwbG9hZFNlcnZpY2UgfSBmcm9tICcuL3VwbG9hZC5zZXJ2aWNlJztcbi8qKlxuICogQGhpZGRlblxuICovXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBEcm9wWm9uZUludGVybmFsRGlyZWN0aXZlIGV4dGVuZHMgRHJvcFpvbmVCYXNlIHtcbiAgICBwcml2YXRlIG5nWm9uZTtcbiAgICBwcm90ZWN0ZWQgdXBsb2FkU2VydmljZTogVXBsb2FkU2VydmljZTtcbiAgICBkaXNhYmxlZDogYm9vbGVhbjtcbiAgICBtdWx0aXBsZTogYm9vbGVhbjtcbiAgICByZXN0cmljdGlvbnM6IEZpbGVSZXN0cmljdGlvbnM7XG4gICAgaW5pdGlhbENsYXNzTmFtZTogYm9vbGVhbjtcbiAgICBwcml2YXRlIHVuc3Vic2NyaWJlRG9jdW1lbnREcmFnRW50ZXI7XG4gICAgcHJpdmF0ZSB1bnN1YnNjcmliZURvY3VtZW50RHJhZ092ZXI7XG4gICAgcHJpdmF0ZSBsYXN0RHJhZ0RvY3VtZW50O1xuICAgIHByaXZhdGUgaGlkZUludGVydmFsRG9jdW1lbnQ7XG4gICAgcHJpdmF0ZSBhY3RpdmVDbGFzcztcbiAgICBjb25zdHJ1Y3RvcihlbGVtZW50OiBFbGVtZW50UmVmLCByZW5kZXJlcjogUmVuZGVyZXIyLCBuZ1pvbmU6IE5nWm9uZSwgdXBsb2FkU2VydmljZTogVXBsb2FkU2VydmljZSk7XG4gICAgbmdPbkRlc3Ryb3koKTogdm9pZDtcbiAgICBvbkRvY3VtZW50RHJhZ0VudGVyKCk6IGJvb2xlYW47XG4gICAgLyoqXG4gICAgICogQGhpZGRlblxuICAgICAqL1xuICAgIG9uRG9jdW1lbnREcmFnT3ZlcigpOiBib29sZWFuO1xuICAgIG9uRHJvcExpc3RlbmVyKGV2ZW50OiBhbnkpOiBib29sZWFuO1xufVxuIl19